"use strict";(self.webpackChunkxatom_document=self.webpackChunkxatom_document||[]).push([[3706],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=s(n),u=l,k=c["".concat(p,".").concat(u)]||c[u]||d[u]||r;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=n(7462),l=(n(7294),n(3905));const r={},o=void 0,i={unversionedId:"reference/components/WFComponent",id:"reference/components/WFComponent",title:"WFComponent",description:"WFComponent serves as the driving force behind xAtom's reactivity, enabling the transformation of Webflow elements into dynamic and interactive components. With WFComponent, you gain mastery over various aspects, including styling, text updates, attribute control, CSS classes, and event listeners (e.g. onclick and onchange). As the pivotal class within the xAtom framework, WFComponent, initiated by a selector query, propels your web development endeavors into dynamic realms. \u270c\ufe0f",source:"@site/docs/reference/components/WFComponent.mdx",sourceDirName:"reference/components",slug:"/reference/components/WFComponent",permalink:"/docs/reference/components/WFComponent",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/components/WFComponent.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/reference/Overview"},next:{title:"WFDynamicList",permalink:"/docs/reference/components/WFDynamicList"}},p={},s=[{value:"Getting Started",id:"getting-started",level:2},{value:"Explore Additional Initialization Methods",id:"explore-additional-initialization-methods",level:3},{value:"Selector Parameter",id:"selector-parameter",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>getElement()</code>",id:"get-element",level:3},{value:"<code>setAttribute(key,value)</code>",id:"set-attribute",level:3},{value:"Parameters",id:"set-attribute-parameter",level:4},{value:"<code>getAttribute(key)</code>",id:"get-attribute",level:3},{value:"Parameters",id:"get-attribute-parameter",level:4},{value:"<code>hasAttribute(key)</code>",id:"has-attribute",level:3},{value:"Parameters",id:"has-attribute-parameter",level:4},{value:"<code>removeAttribute(key)</code>",id:"remove-attribute",level:3},{value:"Parameters",id:"remove-attribute-parameter",level:4},{value:"<code>getChildAsComponent(selector)</code>",id:"get-child-component",level:3},{value:"Parameters",id:"get-child-component-parameter",level:4},{value:"<code>getChildAsComponents(selector)</code>",id:"get-child-components",level:3},{value:"Parameters",id:"get-child-components-parameter",level:4},{value:"<code>getManyChildAsComponents(selector)</code>",id:"get-many-child-components",level:3},{value:"Parameters",id:"get-many-child-components-parameter",level:4},{value:"<code>getCssClass()</code>",id:"get-css-class",level:3},{value:"<code>addCssClass(className)</code>",id:"add-css-class",level:3},{value:"Parameters",id:"add-css-class-parameter",level:4},{value:"<code>replaceCssClass(oldClassName,newClassName)</code>",id:"replace-css-class",level:3},{value:"Parameters",id:"replace-css-class-parameter",level:4},{value:"<code>toggleCssClass(className)</code>",id:"toggle-css-class",level:3},{value:"Parameters",id:"toggle-css-class-parameter",level:4},{value:"<code>removeCssClass(className)</code>",id:"remove-css-class",level:3},{value:"Parameters",id:"remove-css-class-parameter",level:4},{value:"<code>setStyle(style)</code>",id:"set-style",level:3},{value:"Parameters",id:"remove-css-class-parameter",level:4},{value:"<code>getStyle()</code>",id:"get-style",level:3},{value:"<code>on(eventType, fn)</code>",id:"on-listener",level:3},{value:"Parameters",id:"remove-css-class-parameter",level:4},{value:"<code>off(eventType, fn)</code>",id:"off-listener",level:3},{value:"Parameters",id:"remove-css-class-parameter",level:4},{value:"<code>getText()</code>",id:"get-text",level:3},{value:"<code>setText(text)</code>",id:"set-text",level:3},{value:"Parameters",id:"set-text-parameters",level:4},{value:"<code>getTextContent()</code>",id:"get-text-content",level:3},{value:"<code>setTextContent(text)</code>",id:"set-text-content",level:3},{value:"Parameters",id:"set-text-content-parameters",level:4},{value:"<code>updateTextViaAttrVar(keyPair)</code>",id:"update-text-var",level:3},{value:"TODO: Webflow Screenshot",id:"todo-webflow-screenshot",level:4},{value:"Parameters",id:"update-text-var-parameters",level:4},{value:"<code>getHTML()</code>",id:"get-html",level:3},{value:"<code>setHTML(htmlString)</code>",id:"set-html",level:3},{value:"Parameters",id:"set-html-parameters",level:4},{value:"<code>getCloneAsComponent()</code>",id:"get-clone-as-component",level:3},{value:"<code>appendChild(child)</code>",id:"append-child",level:3},{value:"Parameters",id:"append-child-parameters",level:4},{value:"<code>removeAllChildren()</code>",id:"remove-all-children",level:3},{value:"<code>remove()</code>",id:"remove-element",level:3}],m={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," serves as the driving force behind xAtom's reactivity, enabling the transformation of Webflow elements into dynamic and interactive components. With ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent"),", you gain mastery over various aspects, including styling, text updates, attribute control, CSS classes, and event listeners (e.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"onclick")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"onchange"),"). As the pivotal class within the xAtom framework, ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent"),", initiated by a selector query, propels your web development endeavors into dynamic realms. \u270c\ufe0f"),(0,l.kt)("h2",{id:"getting-started"},"Getting Started"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Initialization"),": To unlock the immense potential of ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," in your xAtom project, begin by creating a new ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," instance. Provide a valid selector as an argument to the class constructor. For instance:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'import { WFComponent } from "@xatom/core";\n\n// Create a new WFComponent instance for the first element with the CSS class ".btn"\nconst myComponent = new WFComponent(".btn");\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Control and Customize"),": Once ",(0,l.kt)("inlineCode",{parentName:"p"},"myComponent")," is initialized, you gain precise control over styling, text updates, attribute management, CSS classes, and event listeners for all elements matching the specified selector. Customize and fine-tune your ",(0,l.kt)("inlineCode",{parentName:"p"},"myComponent")," to seamlessly align with your project's unique requirements."),(0,l.kt)("h3",{id:"explore-additional-initialization-methods"},"Explore Additional Initialization Methods"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Additional Initialization Examples"',title:'"Additional',Initialization:!0,'Examples"':!0},'// Initialize WFComponent using different selectors\nconst buttonA = new WFComponent("#button");\nconst buttonB = new WFComponent(".button");\nconst buttonC = new WFComponent(`[xa-type="button"]`);\nconst buttonD = new WFComponent(`.buttons > button`);\n// Benefit from TypeScript type support\nconst container = new WFComponent<HTMLDivElement>(`.mydiv`);\n')),(0,l.kt)("p",null,"These examples illustrate various methods to create ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," instances using different CSS selectors. The last example showcases how to leverage TypeScript type support when initializing ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," for specific Webflow elements. Feel free to explore these options to best suit your project's needs. \ud83d\udca1"),(0,l.kt)("h2",{id:"selector-parameter"},"Selector Parameter"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"selector")," parameter within ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," is versatile and can accept one of the following types:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A string that precisely matches a valid CSS selector."),(0,l.kt)("li",{parentName:"ul"},"An HTMLElement representing a specific element in the document."),(0,l.kt)("li",{parentName:"ul"},"An existing ",(0,l.kt)("inlineCode",{parentName:"li"},"WFComponent")," instance.")),(0,l.kt)("p",null,"If the provided string is not a valid CSS selector, it will result in an exception. You can learn more about CSS selectors ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_selectors"},"here")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Selector example"',title:'"Selector','example"':!0},'// Example: Initialize WFComponent with a CSS selector\nconst myComponentBySelector = new WFComponent(".btn");\n\n// Example: Initialize WFComponent with an HTMLElement\nconst myDiv = document.getElementById("myDiv");\nconst myComponentByElement = new WFComponent(myDiv);\n\n// Example: Initialize WFComponent with an existing WFComponent instance\nconst existingComponent = new WFComponent(".existing");\nconst myComponentByInstance = new WFComponent(existingComponent);\n')),(0,l.kt)("p",null,"This provides insights into the flexibility of the selector parameter, allowing developers to initialize WFComponent using various supported types, enhancing its adaptability in different scenarios. \ud83c\udfaf"),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," class offers a comprehensive set of properties and methods to empower your development journey:"),(0,l.kt)("h3",{id:"get-element"},(0,l.kt)("inlineCode",{parentName:"h3"},"getElement()")),(0,l.kt)("p",null,"Obtain the underlying HTML element linked to the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," instance, granting you access to native HTML element APIs for extended functionality."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},"// Create a new WFComponent instance for a <div> element\nconst container = new WFComponent<HTMLDivElement>(`.mydiv`);\n// Retrieve the associated HTML element\nconst htmlElement = container.getElement();\n// Now, harness the full power of native HTML element APIs\nconsole.log(htmlElement);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getElement() : HTMLElement;\n")),(0,l.kt)("p",null,"With ",(0,l.kt)("inlineCode",{parentName:"p"},"getElement()"),", you can seamlessly integrate custom behavior into your web components beyond the scope of xAtom."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"set-attribute"},(0,l.kt)("inlineCode",{parentName:"h3"},"setAttribute(key,value)")),(0,l.kt)("p",null,"Assign a specific attribute to the element by specifying the attribute key and its corresponding value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for an input element\nconst input = new WFComponent(`.myinput`);\n// Set a native HTML attribute as an example\ninput.setAttribute("disabled", "disabled");\n// Define a custom attribute with a key and value\ninput.setAttribute("xa-type", "my-btn");\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setAttribute(key:string,value:string) : void;\n")),(0,l.kt)("h4",{id:"set-attribute-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"key")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The attribute key to be set.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"value")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to assign to the attribute.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-attribute"},(0,l.kt)("inlineCode",{parentName:"h3"},"getAttribute(key)")),(0,l.kt)("p",null,"Returns the value of the attribute with the specified key."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for an link element\nconst link = new WFComponent(`.mylink`);\n// Get the value of the attribute\nconst hrefValue = input.getAttribute("href");\nconsole.log(hrefValue);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getAttribute(key:string) : string;\n")),(0,l.kt)("h4",{id:"get-attribute-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"key")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The attribute key to retrieve.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"has-attribute"},(0,l.kt)("inlineCode",{parentName:"h3"},"hasAttribute(key)")),(0,l.kt)("p",null,"Checks if the element has the attribute with the specified key."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for an input element\nconst input = new WFComponent(`.myinput`);\n// Check if the attribute is present\nconst isDisabled = input.hasAttribute("disabled");\nconsole.log(isDisabled);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"hasAttribute(key:string) : boolean;\n")),(0,l.kt)("h4",{id:"has-attribute-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"key")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The attribute key to check.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"remove-attribute"},(0,l.kt)("inlineCode",{parentName:"h3"},"removeAttribute(key)")),(0,l.kt)("p",null,"Removes the attribute with the given key from the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for an input element\nconst input = new WFComponent(`.myinput`);\n// Remove the attribute\ninput.removeAttribute("disabled");\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"removeAttribute(key:string) : void;\n")),(0,l.kt)("h4",{id:"remove-attribute-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"key")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The attribute key to remove.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-child-component"},(0,l.kt)("inlineCode",{parentName:"h3"},"getChildAsComponent(selector)")),(0,l.kt)("p",null,"Returns the first matched child element under the current parent element as a WFComponent instance."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},"// Create a new WFComponent instance for a card component\nconst card = new WFComponent(`.my-card`);\n// Create a new WFComponent instance for a link inside the card\nconst cardLink = card.getChildAsComponent(`.my-link`);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getChildAsComponent<T>(selector:string) : WFComponent<T>;\n")),(0,l.kt)("h4",{id:"get-child-component-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"selector")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The CSS selector.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-child-components"},(0,l.kt)("inlineCode",{parentName:"h3"},"getChildAsComponents(selector)")),(0,l.kt)("p",null,"Returns an array of matched children elements under the current parent element as WFComponent instances."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},"// Create a new WFComponent instance for a product listing element\nconst productList = new WFComponent(`.product-listing`);\n// Create an array of WFComponent instances for all product cards inside the listing\nconst productCards =\n  productList.getChildAsComponents(`.product-card`);\nproductCards.forEach((productCard) => {\n  console.log(productCard);\n});\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getChildAsComponents<T>(selector:string) : WFComponent<T>[];\n")),(0,l.kt)("h4",{id:"get-child-components-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"selector")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The CSS selector.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-many-child-components"},(0,l.kt)("inlineCode",{parentName:"h3"},"getManyChildAsComponents(selector)")),(0,l.kt)("p",null,"Returns matched children elements under the current parent element based on the provided object of selectors as WFComponent instances."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a product card\nconst productCard = new WFComponent(`.product-card`);\n\n// Define an object with selectors for various child elements\nconst selectors = {\n  img: ".product-img",\n  title: ".product-title",\n  price: ".product-price",\n};\n\n// Get the specified child elements within the product card\nconst { img, title, price } =\n  productCard.getManyChildAsComponents(selectors);\n\nconsole.log(img, title, price);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getManyChildAsComponents(selector:{[key:string]:string}) : {[key:string]:WFComponent};\n")),(0,l.kt)("h4",{id:"get-many-child-components-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"selector")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"An object containing key-value pairs for naming variables in the return and their associated CSS selectors.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-css-class"},(0,l.kt)("inlineCode",{parentName:"h3"},"getCssClass()")),(0,l.kt)("p",null,"Returns an array containing all the CSS classes present in the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a button\nconst button = new WFComponent(`.btn`);\nconst cssClasses = button.getCssClass();\nconsole.log(cssClasses); // Outputs: ["btn", "btn-primary", "small"]\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getCssClass() : string[];\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"add-css-class"},(0,l.kt)("inlineCode",{parentName:"h3"},"addCssClass(className)")),(0,l.kt)("p",null,"Adds the specified CSS class to the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a button\nconst button = new WFComponent(`.btn`);\n// Append the CSS class\nbutton.addCssClass("btn-primary");\nconst cssClasses = button.getCssClass();\nconsole.log(cssClasses); // Outputs: ["btn", "btn-primary"]\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"addCssClass(className:string):void;\n")),(0,l.kt)("h4",{id:"add-css-class-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The CSS class name")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"replace-css-class"},(0,l.kt)("inlineCode",{parentName:"h3"},"replaceCssClass(oldClassName,newClassName)")),(0,l.kt)("p",null,"Replaces the old CSS class with the new CSS class on the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a button\nconst button = new WFComponent(`.btn`);\nconsole.log(button.getCssClass()); // Outputs: ["btn", "btn-primary", "small"]\n\n// Replace the CSS class\nbutton.replaceCssClass("btn-primary", "btn-secondary");\nconsole.log(button.getCssClass()); // Outputs: ["btn", "btn-secondary", "small"]\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"replaceCssClass(oldClassName:string,newClassName:string):void;\n")),(0,l.kt)("h4",{id:"replace-css-class-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"oldClassName")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The old CSS class name to replace")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"newClassName")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The new CSS class name to set")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"toggle-css-class"},(0,l.kt)("inlineCode",{parentName:"h3"},"toggleCssClass(className)")),(0,l.kt)("p",null,"Toggles the presence of the specified CSS class on the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for an accordion element\nconst accordion = new WFComponent(`.accordion`);\nconsole.log(accordion.getCssClass()); // Outputs: ["accordion", "opened"]\n\n// Toggle the CSS class\naccordion.toggleCssClass("opened");\nconsole.log(accordion.getCssClass()); // Outputs: ["accordion"]\n\naccordion.toggleCssClass("opened");\nconsole.log(accordion.getCssClass()); // Outputs: ["accordion", "opened"]\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"toggleCssClass(className:string):void;\n")),(0,l.kt)("h4",{id:"toggle-css-class-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The CSS class name to toggle")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"remove-css-class"},(0,l.kt)("inlineCode",{parentName:"h3"},"removeCssClass(className)")),(0,l.kt)("p",null,"Removes the specified CSS class from the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a dialog element\nconst dialog = new WFComponent(`.dialog`);\nconsole.log(dialog.getCssClass()); // Outputs: ["dialog", "opened"]\n\n// Remove the CSS class\ndialog.removeCssClass("opened");\nconsole.log(dialog.getCssClass()); // Outputs: ["dialog"]\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"removeCssClass(className:string):void;\n")),(0,l.kt)("h4",{id:"remove-css-class-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The CSS class name to remove")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"set-style"},(0,l.kt)("inlineCode",{parentName:"h3"},"setStyle(style)")),(0,l.kt)("p",null,"Updates the element's style by applying the provided style object."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a accordion element\nconst accordion = new WFComponent(`.accordion`);\naccordion.setStyle({\n  height: "300px",\n  //You can use variables as well\n  "--my-variable": "10px",\n});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setStyle(style:styleProperties):void;\n")),(0,l.kt)("h4",{id:"remove-css-class-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"style")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"An object containing CSS styles or valid CSS variables.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-style"},(0,l.kt)("inlineCode",{parentName:"h3"},"getStyle()")),(0,l.kt)("p",null,"Returns the style object associated with the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for an accordion element\nconst accordion = new WFComponent(`.accordion`);\naccordion.setStyle({\n  height: "300px",\n  "--my-variable": "10px",\n});\n\n// Retrieve the style object for the accordion element\nconst accordionStyle = accordion.getStyle();\n\n// Output the style object to the console\nconsole.log(accordionStyle); // Outputs: {..., height: "300px", "--my-variable": "10px", ...}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getStyle():styleProperties;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"on-listener"},(0,l.kt)("inlineCode",{parentName:"h3"},"on(eventType, fn)")),(0,l.kt)("p",null,"Attaches an event listener to the element, listening for events such as 'click,' 'change,' or 'blur.'"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a button element\nconst button = new WFComponent(`.button`);\n\n// Define a click event handler function\nconst onClick = () => {\n  console.log("Button clicked");\n};\n\n// Attach the click event listener to the button\nbutton.on("click", onClick);\n\n// Create a new WFComponent instance for an input element\nconst input = new WFComponent(`.my-input`);\n\n// Define a change event handler function\nconst onChange = () => {\n  console.log("Input text changed", input.getAttribute("value"));\n};\n\n// Attach the change event listener to the input\ninput.on("change", onChange);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"on(eventType:string,(event:Event)=>void):void;\n")),(0,l.kt)("h4",{id:"remove-css-class-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"eventType")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"A case-sensitive string representing the ",(0,l.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/Events"},"event type")," to listen for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fn")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"function(event)")),(0,l.kt)("td",{parentName:"tr",align:null},"A callback function that is executed when the specified event type is triggered.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"off-listener"},(0,l.kt)("inlineCode",{parentName:"h3"},"off(eventType, fn)")),(0,l.kt)("p",null,"Detaches an event listener from the current element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a button element\nconst button = new WFComponent(`.button`);\n\n// Define a click event handler function\nconst onClick = () => {\n  console.log("Button clicked");\n};\n\n// Attach the click event listener to the button\nbutton.on("click", onClick);\n\n// Later, detach the click event listener\nbutton.off("click", onClick);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"off(eventType:string,(event:Event)=>void):void;\n")),(0,l.kt)("h4",{id:"remove-css-class-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"eventType")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"A case-sensitive string representing the ",(0,l.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/Events"},"event type")," to detach.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fn")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"function(event)")),(0,l.kt)("td",{parentName:"tr",align:null},"The callback function that was previously attached and should be detached from the specified event type.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-text"},(0,l.kt)("inlineCode",{parentName:"h3"},"getText()")),(0,l.kt)("p",null,"Returns the text content of the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a heading element\nconst heading = new WFComponent(`.my-heading`);\n\n// Get the text content of the heading\nconst textContent = heading.getText();\nconsole.log(textContent); // Outputs: "Welcome to xAtom!"\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getText():string;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"set-text"},(0,l.kt)("inlineCode",{parentName:"h3"},"setText(text)")),(0,l.kt)("p",null,"Updates the inner text of the element with the provided text."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a paragraph element\nconst paragraph = new WFComponent(`.my-paragraph`);\n\n// Update the inner text of the paragraph\nparagraph.setText("Hello, xAtom!");\n\n// Get the updated text\nconst updatedText = paragraph.getText();\nconsole.log(updatedText); // Outputs: "Hello, xAtom!"\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setText(text:string):void;\n")),(0,l.kt)("h4",{id:"set-text-parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"text")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to set as the inner text.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-text-content"},(0,l.kt)("inlineCode",{parentName:"h3"},"getTextContent()")),(0,l.kt)("p",null,"Returns the text content of the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a span element\nconst span = new WFComponent(`.my-span`);\n\n// Get the text content of the span\nconst spanTextContent = span.getTextContent();\nconsole.log(spanTextContent); // Outputs: "Click me!"\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getTextContent():string;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"set-text-content"},(0,l.kt)("inlineCode",{parentName:"h3"},"setTextContent(text)")),(0,l.kt)("p",null,"Updates the text content of the element with the provided text."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a div element\nconst div = new WFComponent(`.my-div`);\n\n// Update the text content of the div\ndiv.setTextContent("This is some dynamic content.");\n\n// Get the updated text content\nconst updatedTextContent = div.getTextContent();\nconsole.log(updatedTextContent); // Outputs: "This is some dynamic content."\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setTextContent(text:string):void;\n")),(0,l.kt)("h4",{id:"set-text-content-parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"text")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to set as the element's content.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"update-text-var"},(0,l.kt)("inlineCode",{parentName:"h3"},"updateTextViaAttrVar(keyPair)")),(0,l.kt)("p",null,"Enhance your web app's dynamism by updating text content based on configured xa-var attributes. This method checks for xa-var attributes on the element or its child elements and updates text accordingly using key-value pairs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'/**\n * Example Product Card HTML structure:\n * <div class="product-card">\n *   <div class="img-container"><img src="..." /></div>\n *   <h4 xa-var="title">Example title<h4>\n *   <p xa-var="description">Example description<p>\n *   <p xa-var="price">$0<p>\n *   <button ...>Add to cart</button>\n * </div>\n */\n\n// Create a new WFComponent instance for a div element\nconst productCard = new WFComponent(`.product-card`);\n\n// Update text content with key-value pairs\nproductCard.updateTextViaAttrVar({\n  title: "Iced Americano",\n  description: "Bold and bitter coffee drink!",\n  price: "$5.00",\n});\n\n/**\n * After text update, the Product Card will look like this:\n * <div class="product-card">\n *   <div class="img-container"><img src="..." /></div>\n *   <h4 xa-var="title">Iced Americano<h4>\n *   <p xa-var="description">Bold and bitter coffee drink!<p>\n *   <p xa-var="price">$5.00<p>\n *   <button ...>Add to cart</button>\n * </div>\n */\n')),(0,l.kt)("h4",{id:"todo-webflow-screenshot"},"TODO: Webflow Screenshot"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"updateTextViaAttrVar(keyPair:{[key:string]:string}):void;\n")),(0,l.kt)("h4",{id:"update-text-var-parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"keyPair")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"An object containing variable names as keys and strings as values.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-html"},(0,l.kt)("inlineCode",{parentName:"h3"},"getHTML()")),(0,l.kt)("p",null,"Returns the HTML content of the element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a section element\nconst section = new WFComponent(`.my-section`);\n\n// Get the HTML content of the section\nconst sectionHTML = section.getHTML();\nconsole.log(sectionHTML); // Outputs: "<div class="content">...</div>"\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getHTML():string;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"set-html"},(0,l.kt)("inlineCode",{parentName:"h3"},"setHTML(htmlString)")),(0,l.kt)("p",null,"Updates the inner HTML content of the element with the provided HTML string."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Create a new WFComponent instance for a div element\nconst div = new WFComponent(`.my-div`);\n\n// Update the inner HTML content of the div\ndiv.setHTML("<p>This is <strong>bold</strong> text.</p>");\n\n// Get the updated HTML content\nconst updatedHTML = div.getHTML();\nconsole.log(updatedHTML); // Outputs: "<p>This is <strong>bold</strong> text.</p>"\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setHTML(htmlString:string):void;\n")),(0,l.kt)("h4",{id:"set-html-parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"htmlString")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The HTML string to set as inner HTML.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-clone-as-component"},(0,l.kt)("inlineCode",{parentName:"h3"},"getCloneAsComponent()")),(0,l.kt)("p",null,"Returns a clone of the current WFComponent as a new component instance."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},"// Create a new WFComponent instance for an element\nconst originalComponent = new WFComponent(`.my-element`);\n\n// Clone the component\nconst clonedComponent = originalComponent.getCloneAsComponent();\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getCloneAsComponent():WFComponent<T>;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"append-child"},(0,l.kt)("inlineCode",{parentName:"h3"},"appendChild(child)")),(0,l.kt)("p",null,"Appends the specified ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," child element to the current element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},"// Create a new WFComponent instance for a parent element\nconst parent = new WFComponent(`.parent`);\n\n// Create a new child WFComponent element and clone child\nconst child = new WFComponent(`.child`).getCloneAsComponent();\n\n// Append the child WFComponent element to the parent\nparent.appendChild(child);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"appendChild(child:WFComponent):void;\n")),(0,l.kt)("h4",{id:"append-child-parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"child")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"WFComponent")),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"WFComponent")," child element to append.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"remove-all-children"},(0,l.kt)("inlineCode",{parentName:"h3"},"removeAllChildren()")),(0,l.kt)("p",null,"Removes all children elements from the current element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},"// Create a new WFComponent instance for a parent element\nconst parent = new WFComponent(`.parent`);\n\n// Remove all children elements from the parent\nparent.removeAllChildren();\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"removeAllChildren():void;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"remove-element"},(0,l.kt)("inlineCode",{parentName:"h3"},"remove()")),(0,l.kt)("p",null,"Removes the element from the DOM."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},"// Create a new WFComponent instance for an element\nconst element = new WFComponent(`.my-element`);\n\n// Remove the element from the DOM\nelement.remove();\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"remove():void;\n")))}d.isMDXComponent=!0}}]);