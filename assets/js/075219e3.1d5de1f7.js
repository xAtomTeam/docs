"use strict";(self.webpackChunkxatom_document=self.webpackChunkxatom_document||[]).push([[879],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),u=l,g=c["".concat(d,".").concat(u)]||c[u]||m[u]||i;return n?a.createElement(g,r(r({ref:t},p),{},{components:n})):a.createElement(g,r({ref:t},p))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[c]="string"==typeof e?e:l,r[1]=o;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),l=n(6010);const i={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(i.tabItem,r),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>S});var a=n(7462),l=n(7294),i=n(6010),r=n(2466),o=n(6550),d=n(1980),s=n(7392),p=n(12);function c(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function m(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function u(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,d._X)(i),(0,l.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=m(e),[r,o]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[d,s]=g({queryString:n,groupId:a}),[c,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,p.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),h=(()=>{const e=d??c;return u({value:e,tabValues:i})?e:null})();(0,l.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:r,selectValue:(0,l.useCallback)((e=>{if(!u({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),s(e),k(e)}),[s,k,i]),tabValues:i}}var h=n(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function N(e){let{className:t,block:n,selectedValue:o,selectValue:d,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.o5)(),m=e=>{const t=e.currentTarget,n=p.indexOf(t),a=s[n].value;a!==o&&(c(t),d(a))},u=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>p.push(e),onKeyDown:u,onClick:m},r,{className:(0,i.Z)("tabs__item",v.tabItem,r?.className,{"tabs__item--active":o===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function f(e){const t=k(e);return l.createElement("div",{className:(0,i.Z)("tabs-container",v.tabList)},l.createElement(N,(0,a.Z)({},e,t)),l.createElement(b,(0,a.Z)({},e,t)))}function S(e){const t=(0,h.Z)();return l.createElement(f,(0,a.Z)({key:String(t)},e))}},1431:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),l=(n(7294),n(3905)),i=n(4866),r=n(5162);const o={},d="WFSlider \ud83c\udd95",s={unversionedId:"reference/components/WFSlider",id:"reference/components/WFSlider",title:"WFSlider \ud83c\udd95",description:"The WFSlider class provides functionality to control Webflow's native slider, enabling tasks such as adding or removing slides and navigating the slides programmatically.",source:"@site/guide/reference/components/WFSlider.mdx",sourceDirName:"reference/components",slug:"/reference/components/WFSlider",permalink:"/guide/reference/components/WFSlider",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WFNav \ud83c\udd95",permalink:"/guide/reference/components/WFNav"},next:{title:"WFRoute",permalink:"/guide/reference/routing/WFRoute"}},p={},c=[{value:"Getting Started",id:"getting-started",level:2},{value:"Installing the package",id:"installing-the-package",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>addSlide(el, config)</code>",id:"add-slide",level:3},{value:"Parameters",id:"add-slide-parameter",level:4},{value:"<code>removeSlide(index)</code>",id:"remove-slide",level:3},{value:"Parameters",id:"remove-slide-parameter",level:4},{value:"<code>goNext()</code>",id:"go-next-slide",level:3},{value:"<code>goPrevious()</code>",id:"go-previous-slide",level:3},{value:"<code>goToIndex(index)</code>",id:"go-to-index",level:3},{value:"Parameters",id:"go-to-index-parameter",level:4},{value:"<code>getActiveSlide()</code>",id:"active-slide",level:3},{value:"<code>getAllSlides()</code>",id:"all-slides",level:3},{value:"<code>getSlideByIndex(index)</code>",id:"slide-by-index",level:3},{value:"<code>getActiveSlideIndex()</code>",id:"active-slide-index",level:3},{value:"<code>getPreviousSlideIndex()</code>",id:"previous-slide-index",level:3},{value:"<code>onSlideChange(cb)</code>",id:"slide-change-event",level:3},{value:"Parameters",id:"slide-change-callback-parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>getSlideNav()</code>",id:"slide-nav-component",level:3},{value:"<code>setSlideNavigationState(state: boolean)</code>",id:"set-slide-navigation-state",level:3},{value:"Parameters",id:"set-slide-navigation-parameter",level:4},{value:"<code>getConfig()</code>",id:"get-config",level:3}],m={toc:c},u="wrapper";function g(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"wfslider-"},"WFSlider \ud83c\udd95"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class provides functionality to control Webflow's native slider, enabling tasks such as adding or removing slides and navigating the slides programmatically."),(0,l.kt)("h2",{id:"getting-started"},"Getting Started"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Initialization"),": To start using the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class in your xAtom project, you'll need to install the ",(0,l.kt)("inlineCode",{parentName:"p"},"@xatom/slider")," package. After installation, initialize ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," as shown in the example below:"),(0,l.kt)("h3",{id:"installing-the-package"},"Installing the package"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"npm",label:"npm",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Terminal"',title:'"Terminal"'},"npm install @xatom/slider\n"))),(0,l.kt)(r.Z,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Terminal"',title:'"Terminal"'},"yarn add @xatom/slider\n"))),(0,l.kt)(r.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Terminal"',title:'"Terminal"'},"pnpm add @xatom/slider\n")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'import { WFSlider } from "@xatom/slider";\nimport { onReady, WFComponent } from "@xatom/core";\n\n// Wait until the webflow page has loaded\nonReady(() => {\n  // Initialize WFSlider\n  const slider = new WFSlider(".slider");\n  const myButton = new WFSlider(".my-button");\n  const cmsItem = new WFComponent(".item");\n\n  // Add a slide to the slider\n  slider.addSlide(cmsItem);\n\n  // Remove the first slide from the slider\n  slider.removeSlide(0);\n\n  // Handle button click to navigate to the next slide\n  myButton.on("click", () => {\n    slider.goNext();\n  });\n  \n  // Listen for slide change events\n  slider.onSlideChange((activeIndex, prevIndex) => {\n    console.log(activeIndex, prevIndex);\n  });\n\n  // Configure the slider for infinite scrolling\n  slider.getConfig().config.infinite = true;\n});\n')),(0,l.kt)("p",null,"This example showcases the integration of ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," into an xAtom project, featuring slide manipulation and navigation through programmatic control."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"new WFSlider(selector);\n")),(0,l.kt)("blockquote",null,(0,l.kt)("h4",{parentName:"blockquote",id:"note"},"Note"),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Compatibility with ",(0,l.kt)("inlineCode",{parentName:"strong"},"WFComponent"))),(0,l.kt)("p",{parentName:"blockquote"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," seamlessly extends the capabilities of the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," class. This means that all the properties and methods available in ",(0,l.kt)("inlineCode",{parentName:"p"},"WFComponent")," are fully compatible and can be used with ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider"),". This compatibility provides you with a wide range of options for enhancing and customizing the behavior of your slider element. Feel free to leverage the power of both components to achieve your desired results efficiently.")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class offers a variety of properties and methods to streamline your development workflow:"),(0,l.kt)("h3",{id:"add-slide"},(0,l.kt)("inlineCode",{parentName:"h3"},"addSlide(el, config)")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"addSlide()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class allows you to add a new slide to the slider."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Initialize WFComponent for each slide\nconst item1 = new WFSlider(".item1");\nconst item2 = new WFSlider(".item2");\nconst item3 = new WFSlider(".item3");\n\n// Add the first slide to the slider\nslider.addSlide(item1);\n\n// Add the second slide to the slider at index 2\nslider.addSlide(item2, { index: 2 });\n\n// Add the third slide to the slider with a custom CSS class\nslider.addSlide(item3, { cssClass: "custom-slide-class" });\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"addSlide(el: WFComponent, config?: { index?: number; cssClass?: string }): void;\n")),(0,l.kt)("h4",{id:"add-slide-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"el")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"WFComponent")),(0,l.kt)("td",{parentName:"tr",align:null},"The component to add as a slide.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{}")),(0,l.kt)("td",{parentName:"tr",align:null},"Additional configuration for the slide.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"index?")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:null},"The index at which the slide should be inserted.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"cssClass?")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"CSS class to be appended to the slide container.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"remove-slide"},(0,l.kt)("inlineCode",{parentName:"h3"},"removeSlide(index)")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"removeSlide()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class enables you to remove a slide from the slider."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Initialize WFComponent for each slide\nconst item1 = new WFSlider(".item1");\n\n// Add the first slide to the slider at index 1\nslider.addSlide(item1, { index: 1 });\n\n// Remove the slide at index 1 from the slider\nslider.removeSlide(1);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"removeSlide(index: number): void;\n")),(0,l.kt)("h4",{id:"remove-slide-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"index")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:null},"The index of the slide to be removed.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"go-next-slide"},(0,l.kt)("inlineCode",{parentName:"h3"},"goNext()")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"goNext()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class allows you to programmatically navigate to the next slide."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\nconst myButton = new WFSlider(".my-button");\n\n// On button click, go to the next slide\nmyButton.on("click", () => {\n    slider.goNext();\n});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"goNext(): void;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"go-previous-slide"},(0,l.kt)("inlineCode",{parentName:"h3"},"goPrevious()")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"goPrevious()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class allows you to programmatically navigate to the previous slide."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\nconst prevButton = new WFSlider(".prev-button");\n\n// On button click, go to the previous slide\nprevButton.on("click", () => {\n    slider.goPrevious();\n});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"goPrevious(): void;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"go-to-index"},(0,l.kt)("inlineCode",{parentName:"h3"},"goToIndex(index)")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"goToIndex()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class allows you to programmatically navigate to a specific slide by its index."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\nconst navButtons = document.querySelectorAll(".nav-button");\n\n// On nav button click, go to the corresponding slide\nnavButtons.forEach((button, index) => {\n    button.addEventListener("click", () => {\n        slider.goToIndex(index);\n    });\n});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"goToIndex(index: number): void;\n")),(0,l.kt)("h4",{id:"go-to-index-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"index")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:null},"The index of the slide to navigate to.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"active-slide"},(0,l.kt)("inlineCode",{parentName:"h3"},"getActiveSlide()")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getActiveSlide()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class returns the active slide component."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\nconst prevButton = new WFSlider(".prev-button");\n\n// On button click\nprevButton.on("click", () => {\n  //Getting current slide\n  const activeSlide = slider.getActiveSlide();\n  //Updating style\n  activeSlide.setStyle({\n    background: "#ccc"\n  });\n});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getActiveSlide(): WFComponent;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"all-slides"},(0,l.kt)("inlineCode",{parentName:"h3"},"getAllSlides()")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getAllSlides()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class retrieves an array containing all slide components."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Get all slides\nconst allSlides = slider.getAllSlides();\n\n// Log all slide components\nconsole.log(allSlides);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getAllSlides(): WFComponent[];\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"slide-by-index"},(0,l.kt)("inlineCode",{parentName:"h3"},"getSlideByIndex(index)")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getSlideByIndex()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class retrieves a slide component by its index."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Get the slide at index 2\nconst slideAtIndex2 = slider.getSlideByIndex(2);\n\n// Log the slide component\nconsole.log(slideAtIndex2);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getSlideByIndex(index: number): WFComponent;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"active-slide-index"},(0,l.kt)("inlineCode",{parentName:"h3"},"getActiveSlideIndex()")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getActiveSlideIndex()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class returns the index of the currently active slide."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Log the active slide index\nconsole.log("Active slide index:", activeSlideIndex.getActiveSlideIndex()); //1\n\nslider.goNextSlide();\n\nconsole.log("Active slide index:", activeSlideIndex.getActiveSlideIndex()); //2\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getActiveSlideIndex(): number;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"previous-slide-index"},(0,l.kt)("inlineCode",{parentName:"h3"},"getPreviousSlideIndex()")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getPreviousSlideIndex()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class returns the index of the previously active slide."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Log the previous slide index\nconsole.log("Previous slide index:", slider.getPreviousSlideIndex()); //0\n\nslider.goPrevious();\n\nconsole.log("Previous slide index:", slider.getPreviousSlideIndex()); //3\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getPreviousSlideIndex(): number;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"slide-change-event"},(0,l.kt)("inlineCode",{parentName:"h3"},"onSlideChange(cb)")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"onSlideChange")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class allows you to register a callback function to be executed when the active slide changes."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Define the callback function\nconst slideChangeCallback = (activeIndex:number, prevIndex:number) => {\n  console.log(`Slide changed from ${prevIndex} to ${activeIndex}`);\n};\n\n// Register the callback function\nconst unregisterCallback = slider.onSlideChange(slideChangeCallback);\n\n// To unregister the callback function later\n// unregisterCallback();\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"onSlideChange(cb: (activeIndex: number, prevIndex: number) => void): () => void;\n")),(0,l.kt)("h4",{id:"slide-change-callback-parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"cb")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(activeIndex: number, prevIndex: number) => void")),(0,l.kt)("td",{parentName:"tr",align:null},"The callback function to be executed on slide change.")))),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,"A function to unregister the callback when no longer needed."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"slide-nav-component"},(0,l.kt)("inlineCode",{parentName:"h3"},"getSlideNav()")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getSlideNav()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class returns the navigation component associated with the slider."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Get the navigation component\nconst navComponent = slider.getSlideNav();\n\n// Modify the navigation component\nnavComponent.setStyle({\n  backgroundColor: "#000",\n  color: "#fff",\n});\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getSlideNav(): WFComponent<HTMLElement>;\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"set-slide-navigation-state"},(0,l.kt)("inlineCode",{parentName:"h3"},"setSlideNavigationState(state: boolean)")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"setSlideNavigationState()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class enables or disables the navigation capabilities of the slider."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Disable slider navigation\nslider.setSlideNavigationState(false);\n\n// Enable slider navigation\nslider.setSlideNavigationState(true);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setSlideNavigationState(state: boolean): void;\n")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"set-slide-navigation-parameter"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"state")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")," to enable navigation, ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," to disable it.")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get-config"},(0,l.kt)("inlineCode",{parentName:"h3"},"getConfig()")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getConfig()")," method in the ",(0,l.kt)("inlineCode",{parentName:"p"},"WFSlider")," class returns the configuration object set by Webflow for the slider."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Example"',title:'"Example"'},'// Initialize WFSlider\nconst slider = new WFSlider(".slider");\n\n// Get the configuration object\nconst config = slider.getConfig();\n\nconsole.log(config); // Output: Webflow slider configuration object\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getConfig(): object;\n")))}g.isMDXComponent=!0}}]);